# Generated by Django 4.0.4 on 2022-04-17 02:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ngay_sinh', models.DateTimeField(auto_now_add=True)),
                ('gioi_tinh', models.BooleanField(default=False)),
                ('avatar', models.ImageField(default=None, upload_to='uploads/%Y/%m')),
                ('so_dien_thoai', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoaiTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_loai_tour', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='LoaiVe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loai_ve', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TinTuc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chu_de', models.TextField()),
                ('noi_dung', models.TextField()),
                ('hinh_anh', models.ImageField(default=None, upload_to='uploads/%Y/%m')),
                ('ngay_dang', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ten_tour', models.CharField(max_length=50)),
                ('ngay_bat_dau', models.DateTimeField(auto_now_add=True)),
                ('ngay_ket_thuc', models.DateTimeField(auto_now_add=True)),
                ('don_gia', models.FloatField(default=0)),
                ('so_cho', models.IntegerField(default=0)),
                ('noi_khoi_hanh', models.CharField(max_length=50)),
                ('hinh_anh', models.ImageField(default=None, upload_to='uploads/%Y/%m')),
                ('loai_tour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tours', to='qldl.loaitour')),
            ],
        ),
        migrations.CreateModel(
            name='LichTrinh',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ngay', models.IntegerField(default=1)),
                ('tieu_de', models.TextField()),
                ('noi_dung', models.TextField()),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lichtrinh', to='qldl.tour')),
            ],
        ),
        migrations.CreateModel(
            name='DonDatTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('don_gia', models.FloatField(default=0)),
                ('so_luong', models.IntegerField(default=0)),
                ('da_thanh_toan', models.BooleanField(default=False)),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dondattour', to=settings.AUTH_USER_MODEL)),
                ('loai_ve', models.ManyToManyField(related_name='dondattour', to='qldl.loaive')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dondattour', to='qldl.tour')),
            ],
        ),
        migrations.CreateModel(
            name='CommentTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('noi_dung', models.TextField()),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenttour', to=settings.AUTH_USER_MODEL)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenttour', to='qldl.tour')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentTinTuc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('noi_dung', models.TextField()),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenttin', to=settings.AUTH_USER_MODEL)),
                ('tin_tuc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenttin', to='qldl.tintuc')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='qldl.userrole'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('rate', models.PositiveSmallIntegerField(default=0)),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to=settings.AUTH_USER_MODEL)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='qldl.tour')),
            ],
            options={
                'unique_together': {('khach_hang', 'tour')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('liked', models.BooleanField(default=False)),
                ('khach_hang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to=settings.AUTH_USER_MODEL)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to='qldl.tour')),
            ],
            options={
                'unique_together': {('khach_hang', 'tour')},
            },
        ),
    ]
